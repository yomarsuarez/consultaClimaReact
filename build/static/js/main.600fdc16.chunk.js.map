{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","components/Clima.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.600fdc16.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({ titulo }) => {\n  return (\n    <nav>\n      <div className=\"nav-wrapper light-blue darken-2\">\n        <a href=\"#!\" className=\"brand-logo\">\n          {titulo}\n        </a>\n      </div>\n    </nav>\n  );\n};\n\nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Error = ({ mensaje }) => {\n  return <p className=\"red darken-4 error\">{mensaje}</p>;\n};\n\nError.propTypes = {\n  mensahje: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import React, { useState } from \"react\";\nimport Error from \"./Error\";\nimport PropTypes from \"prop-types\";\n\nconst Formulario = ({ busqueda, guardarBusqueda, guardarConsultar }) => {\n  const [error, guardarError] = useState(false);\n\n  // extraer ciudad y país\n  const { ciudad, pais } = busqueda;\n\n  //funcion que coloca los elementos en el state\n  const handleChange = (e) => {\n    //actualizar el state\n    guardarBusqueda({\n      ...busqueda,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  //Cuando el usuario da submit al form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //validar\n    if (ciudad.trim() === \"\" || pais.trim() === \"\") {\n      guardarError(true);\n      return;\n    }\n\n    guardarError(false);\n\n    //pasarlo al componente principal\n    guardarConsultar(true);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error ? <Error mensaje=\"Ambos campos son obligatorios\" /> : null}\n      <div className=\"input-field col s12\">\n        <input\n          type=\"text\"\n          name=\"ciudad\"\n          id=\"ciudad\"\n          value={ciudad}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"ciudad\">Ciudad: </label>\n      </div>\n      <div className=\"input-field col s12\">\n        <select name=\"pais\" id=\"pais\" value={pais} onChange={handleChange}>\n          <option value=\"\">-- Seleccione un país--</option>\n          <option value=\"US\">Estados Unidos</option>\n          <option value=\"MX\">México</option>\n          <option value=\"AR\">Argentina</option>\n          <option value=\"CO\">Colombia</option>\n          <option value=\"CR\">Costa Rica</option>\n          <option value=\"ES\">España</option>\n          <option value=\"PE\">Perú</option>\n        </select>\n        <label htmlFor=\"pais\">País: </label>\n      </div>\n      <div className=\"input-field col s12\">\n        <input\n          type=\"submit\"\n          value=\"Buscar Clima\"\n          className=\"waves-effect waves-light btn-large btn-block yellow accent-4\"\n        />\n      </div>\n    </form>\n  );\n};\n\nFormulario.propTypes = {\n  busqueda: PropTypes.object.isRequired,\n  guardarBusqueda: PropTypes.func.isRequired,\n  guardarConsultar: PropTypes.func.isRequired,\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Clima = ({ resultado }) => {\n  // extraer los valores\n  const { name, main } = resultado;\n\n  if (!name) return null;\n\n  //Grados Kelvin\n  const kelvin = 273.15;\n  return (\n    <div className=\"card-panel white col s12\">\n      <div className=\"black-text\">\n        <h2>El clima de {name} es: </h2>\n        <p className=\"temperatura\">\n          {parseFloat(main.temp - kelvin, 10).toFixed(2)}{\" \"}\n          <span> &#x2103; </span>\n        </p>\n        <p>\n          Temperatura Máxima:\n          {parseFloat(main.temp_max - kelvin, 10).toFixed(2)}{\" \"}\n          <span> &#x2103; </span>\n        </p>\n        <p>\n          Temperatura Mínima:\n          {parseFloat(main.temp_min - kelvin, 10).toFixed(2)}{\" \"}\n          <span> &#x2103; </span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nClima.propTypes = {\n  resultado: PropTypes.object.isRequired,\n};\n\nexport default Clima;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Clima from \"./components/Clima\";\nimport Error from \"./components/Error\";\n\nfunction App() {\n  const [busqueda, guardarBusqueda] = useState({\n    ciudad: \"\",\n    pais: \"\",\n  });\n\n  const [consultar, guardarConsultar] = useState(false);\n  const [resultado, guardarResultado] = useState({});\n  const [error, guardarError] = useState(false);\n  const { ciudad, pais } = busqueda;\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      if (consultar) {\n        const appId = \"841257a60b06114c84514cd0b8555e39\";\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n\n        guardarResultado(resultado);\n        guardarConsultar(false);\n\n        // Detecta si hubo resultados correctos en la consulta\n        if (resultado.cod === \"404\") {\n          guardarError(true);\n        } else {\n          guardarError(false);\n        }\n      }\n    };\n    consultarAPI();\n    // eslint-disable-next-line\n  }, [consultar]);\n\n  let componente;\n  if (error) {\n    componente = <Error mensaje=\"No hay resultados\" />;\n  } else {\n    componente = <Clima resultado={resultado} />;\n  }\n\n  return (\n    <Fragment>\n      <Header titulo=\"Clima React App\" />\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario\n                busqueda={busqueda}\n                guardarBusqueda={guardarBusqueda}\n                guardarConsultar={guardarConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">{componente}</div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}